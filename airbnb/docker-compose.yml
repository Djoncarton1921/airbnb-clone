version: "3.8"

services:
  redis:
    image: redis
    env_file:
      - .env
    environment:
      - AIRBNB_REDIS_HOST=airbnb_redis
      - AIRBNB_SENTRY_DSN=${AIRBNB_SENTRY_DSN}
    ports:
      - 6380:6379
    container_name: ${AIRBNB_REDIS_HOST}
    networks:
      - app-network

  celery:
    restart: always
    env_file:
      - .env
    environment:
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - AIRBNB_REDIS_HOST=airbnb_redis
      - AIRBNB_SENTRY_DSN=${AIRBNB_SENTRY_DSN}
    build:
      context: .
    command: celery -A airbnb worker -l info
    volumes:
      - .:/airbnb-docker
    links:
      - redis
    depends_on:
      - redis
      - web
    networks:
      - app-network

  flower:
    image: mher/flower
    restart: always
    env_file:
      - .env
    environment:
      - FLOWER_PORT=5556
      - CELERY_BROKER_TRANSPORT=redis
      - CELERY_BROKER_HOST=redis
      - CELERY_BROKER_PORT=6379
      - CELERY_BROKER_VHOST=2
      - CELERY_REDIS_DB=2
      - CELERY_BROKER_URL=${CELERY_BROKER_HOST}://${CELERY_BROKER_TRANSPORT}:${CELERY_BROKER_PORT}/${CELERY_REDIS_DB}
      - AIRBNB_SENTRY_DSN=${AIRBNB_SENTRY_DSN}
    volumes:
      - .:/airbnb-docker
    command: flower --broker=${CELERY_BROKER_URL}
    ports:
      - 5556:5555
    depends_on:
      - celery
      - redis
    container_name: airbnb_flower
    networks:
      - app-network

  celery_beat:
    restart: on-failure
    env_file:
      - .env
    environment:
      - CELERY_BROKER_TRANSPORT=redis
      - CELERY_BROKER_HOST=redis
      - CELERY_BROKER_PORT=6379
      - CELERY_BROKER_VHOST=2
      - CELERY_REDIS_DB=2
      - CELERY_BROKER_URL=${CELERY_BROKER_HOST}://${CELERY_BROKER_TRANSPORT}:${CELERY_BROKER_PORT}/${CELERY_REDIS_DB}
      - FLOWER_PORT=5556
      - AIRBNB_SENTRY_DSN=${AIRBNB_SENTRY_DSN}
    build:
      context: .
    volumes:
      - .:/airbnb-docker
    command: celery -A airbnb beat -l info --pidfile= --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - redis
      - db
      - web
    container_name: airbnb_celery_beat
    networks:
      - app-network

  db:
    image: postgres:11
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=airbnb_thinknetica
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    container_name: airbnb_db
    networks:
      - app-network

  web:
    restart: always
    env_file:
      - .env
    environment:
      - AIRBNB_REDIS_HOST=airbnb_redis
      - CELERY_BROKER_TRANSPORT=redis
      - CELERY_BROKER_HOST=redis
      - CELERY_BROKER_PORT=6379
      - CELERY_BROKER_VHOST=2
      - CELERY_REDIS_DB=2
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_DEFAULT_USER=${POSTGRES_DEFAULT_USER}
      - POSTGRES_DEFAULT_PASSWORD=${POSTGRES_DEFAULT_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_URL=${CELERY_BROKER_HOST}://${CELERY_BROKER_TRANSPORT}:${CELERY_BROKER_PORT}/${CELERY_REDIS_DB}
      - AIRBNB_SENTRY_DSN=${AIRBNB_SENTRY_DSN}
    build:
      context: .
    volumes:
      - .:/airbnb-docker
    image: web:airbnb-app
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    depends_on:
      - db
    container_name: airbnb_app
    networks:
      - app-network


volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge

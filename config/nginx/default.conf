upstream server {
    server      server:8000;
}

upstream daphne {
    server      daphne:8001;
}

server {
    server_name             www.airbnb-clone.xyz;
    server_valid_name       airbnb-clone.xyz;
    return 301              https://$server_valid_name$request_uri;
}

server {
    listen                  80;
    server_name             airbnb-clone.xyz;
    return 301              https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name             airbnb-clone.xyz;

    # SSL
    ssl_certificate         /etc/letsencrypt/live/airbnb-clone.xyz/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/airbnb-clone.xyz/privkey.pem;

    ssl_session_cache       shared:le_nginx_SSL:10m;
    ssl_session_timeout     1440m;
    ssl_session_tickets     off;

    ssl_protocols TLSv1.2       TLSv1.3;
    ssl_prefer_server_ciphers   off;

    include         /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam     /etc/letsencrypt/ssl-dhparams.pem;

    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

    client_max_body_size 200M;
    keepalive_timeout 5;

    access_log      off;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location /static/ {
        alias /app/airbnb_app/airbnb/static/;
    }

    location /media/ {
        alias /app/airbnb_app/airbnb/media/;
    }

    location /ws/ {
        proxy_pass              http://daphne;
        proxy_http_version      1.1;
        proxy_redirect          off;
        proxy_set_header        Upgrade $http_upgrade;
        proxy_set_header        Connection "upgrade";
    }

    location / {
        proxy_pass              http://server;
        proxy_set_header        Host $server_name;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
